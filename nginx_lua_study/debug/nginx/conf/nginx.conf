
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;


error_log logs/error.log;   #指定错误日志文件路径


#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

stream {

    upstream upstream_servers {
        server 127.0.0.1:8080;
    }
	#main log format 
	log_format  custom  'RECV FROM [$remote_addr:$remote_port] [$time_local]  '
                    '$status SEND_DATA[$bytes_sent] RECV_DATA[$bytes_received] from [$upstream_addr] ';

    server {
        listen 81 udp;
        #proxy_bind $remote_addr:$remote_port transparent;
        #proxy_pass upstream_servers;
                
        #内容生成阶段
                
        content_by_lua_block {
                content_by_lua  lua/access_check.lua
                content_by_lua lua/$1.lua
        }


        # proxy_responses 0;
        # proxy_timeout 1s;
        # proxy_bind $remote_addr:$remote_port transparent;     
        # proxy_pass upstream_servers;

        # content_by_lua_block {
        #         ngx.say(ngx.var.remote_addr)
        #         ngx.say(ngx.var.remote_port)
        # }
        access_log /var/log/nginx/stream_udp.log custom;
    }
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    #gzip  on;

    # set search paths for pure Lua external libraries (';;' is the default path):
    #lua_package_path '/home/dl/workspace/eotu_nginx/debug/nginx/lua/?.lua;/home/dl/workspace/eotu_nginx/debug/?.lua;;';
    lua_package_path '$prefix/lua/?.lua;/blah/?.lua;;';

    # set search paths for Lua external libraries written in C (can also use ';;'):
    lua_package_cpath '$prefix/lib/?.so;;';

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;
        #access_log  logs/host.access.log  main;
        #set $lua_file_root_path "/home/dl/workspace/eotu_nginx/debug/nginx";

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /echo_var {
            #echo "${lua_file_root_path}123";
            content_by_lua_block {
                ngx.say(ngx.var.remote_addr)
                ngx.say(ngx.var.remote_port)
            }
        }

        location ~ ^/api/([-_a-zA-Z0-9/]+) {

                access_by_lua_file  lua/access_check.lua;
                #内容生成阶段
                content_by_lua_file lua/$1.lua;
            }

     location = /request_body {
         client_max_body_size 50k;
         client_body_buffer_size 50k;

         content_by_lua_block {
             ngx.req.read_body()  -- explicitly read the req body
             local data = ngx.req.get_body_data()
            #  if data then
            #      ngx.say("body data:")
            #      ngx.print(data)
            #      ngx.print("\n---\n");
            #      return
            #  end

             -- body may get buffered in a temp file:
             local file = ngx.req.get_body_file()
             if file then
                 ngx.say("body is in file ", file)
             else
                 ngx.say("no body found")
             end
         }
     }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
